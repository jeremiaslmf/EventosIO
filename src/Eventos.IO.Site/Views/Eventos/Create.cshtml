@model Eventos.IO.Application.ViewModels.EventoViewModel

@{
    ViewData["Title"] = "Registro de Evento";
}

<h1>Cadastro</h1>
<h4>Evento</h4>
<hr />

<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <vc:summary />

            <div class="form-group">
                <label asp-for="Nome" class="control-label"></label>
                <input asp-for="Nome" class="form-control" />
                <span asp-validation-for="Nome" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DescricaoCurta" class="control-label"></label>
                <input asp-for="DescricaoCurta" class="form-control" />
                <span asp-validation-for="DescricaoCurta" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DescricaoLonga" class="control-label"></label>
                <textarea rows="5" asp-for="DescricaoLonga" class="form-control"></textarea>
                <span asp-validation-for="DescricaoLonga" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Categoria" class="control-label"></label>
                <div>
                    <partial name="_Categorias" />
                    <span asp-validation-for="Categoria" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group">
                <label asp-for="DataInicio" class="control-label"></label>
                <input asp-for="DataInicio" class="form-control" />
                <span asp-validation-for="DataInicio" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="DataFim" class="control-label"></label>
                <input asp-for="DataFim" class="form-control" />
                <span asp-validation-for="DataFim" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Gratuito" /> @Html.DisplayNameFor(model => model.Gratuito)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="Valor" class="control-label"></label>
                <input asp-for="Valor" class="form-control" />
                <span asp-validation-for="Valor" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Online" /> @Html.DisplayNameFor(model => model.Online)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="NomeDaEmpresa" class="control-label"></label>
                <input asp-for="NomeDaEmpresa" class="form-control" />
                <span asp-validation-for="NomeDaEmpresa" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Criar" class="btn btn-success" />
                <a asp-action="Index" class="btn btn-primary">Voltar</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    @{ if (ViewBag.RetornoPost != null)
        {
            var notificacao = ViewBag.RetornoPost.ToString().Split(',');
            <script>
                toastr.options = {
                    "closeButton": false,
                    "debug": false,
                    "newestOnTop": false,
                    "progressBar": false,
                    "positionClass": "toast-top-right",
                    "preventDuplicates": false,
                    "onclick": null,
                    "showDuration": "300",
                    "hideDuration": "1000",
                    "timeOut": "5000",
                    "extendedTimeOut": "1000",
                    "showEasing": "swing",
                    "hideEasing": "linear",
                    "showMethod": "fadeIn",
                    "hideMethod": "fadeOut"
                }
                toastr["@notificacao[0]"]("@notificacao[1]");
            </script>
        }
    }
}
